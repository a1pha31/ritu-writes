[{"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\index.js":"1","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\App.js":"2","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\Home.js":"3","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\NavComponent.js":"4","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\JumbComp.js":"5","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\NoMatch.js":"6","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\util\\firebase.js":"7","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\ShowModal.js":"8","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\AdminLogin.js":"9","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\MyCarousel.js":"10","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Subscribe.js":"11","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Contact.js":"12","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Content.js":"13","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\AddData.js":"14","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\EditData.js":"15","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\ShowMessage.js":"16","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\AllContent.js":"17","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Message.js":"18"},{"size":260,"mtime":1609061461939,"results":"19","hashOfConfig":"20"},{"size":1784,"mtime":1617135799870,"results":"21","hashOfConfig":"20"},{"size":618,"mtime":1617135843272,"results":"22","hashOfConfig":"20"},{"size":3101,"mtime":1617129402147,"results":"23","hashOfConfig":"20"},{"size":1031,"mtime":1609067713065,"results":"24","hashOfConfig":"25"},{"size":603,"mtime":1614065582837,"results":"26","hashOfConfig":"20"},{"size":494,"mtime":1609690994106,"results":"27","hashOfConfig":"20"},{"size":1043,"mtime":1610921960908,"results":"28","hashOfConfig":"20"},{"size":3986,"mtime":1617129692717,"results":"29","hashOfConfig":"20"},{"size":2584,"mtime":1613549530443,"results":"30","hashOfConfig":"20"},{"size":3081,"mtime":1610921911452,"results":"31","hashOfConfig":"20"},{"size":1501,"mtime":1617127720595,"results":"32","hashOfConfig":"20"},{"size":1668,"mtime":1617135692242,"results":"33","hashOfConfig":"20"},{"size":4302,"mtime":1617135819217,"results":"34","hashOfConfig":"20"},{"size":4603,"mtime":1617135779360,"results":"35","hashOfConfig":"20"},{"size":6192,"mtime":1617128032873,"results":"36","hashOfConfig":"20"},{"size":6814,"mtime":1617135710872,"results":"37","hashOfConfig":"20"},{"size":3316,"mtime":1617127800328,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gnqyvt",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1jiig1x",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\index.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\App.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\Home.js",["80"],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\NavComponent.js",[],["81","82"],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\JumbComp.js",["83","84"],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\NoMatch.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\util\\firebase.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\ShowModal.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\AdminLogin.js",["85"],"import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\nimport firebase from './../util/firebase';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\nimport bground from './Pics/cardPat1.jpg'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Styles = styled.div`\r\n    .container{\r\n        background-image: url(${bground});\r\n        margin-top: 5%;\r\n        margin-bottom: 10%;\r\n        /* text-align:center; */\r\n    }\r\n@media screen and (max-width: 990px){\r\n        .container{\r\n        margin-top: 15%;\r\n        margin-bottom: 15%;\r\n        /* text-align:center; */\r\n    }\r\n}\r\n@media screen and (max-width: 580px){\r\n        .container{\r\n        margin-top: 20%;\r\n        margin-bottom: 20%;\r\n        /* text-align:center; */\r\n    }\r\n}\r\n\r\n    @media all and (min-width: 480px) {\r\n        .container {\r\n            padding: 60px 0;\r\n        }\r\n\r\n        .container form {\r\n            margin: 0 auto;\r\n            max-width: 320px;\r\n        }\r\n    }    \r\n    h1{\r\n        text-align:center;\r\n        margin: 3%;\r\n    }\r\n`\r\n\r\nexport default function AdminLogin() {\r\n\r\n    const history = useHistory();\r\n    if(sessionStorage.getItem('username')){\r\n        history.push('/');\r\n        // window.location.assign('/');\r\n    }\r\n\r\n    const DB = firebase.database().ref();\r\n    \r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [allLoginData, setAllLoginData] = useState({});\r\n\r\n    function validateForm() {\r\n        return username.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const id = Object.keys(allLoginData).find((id) => allLoginData[id].username === username);\r\n        if(id){\r\n            console.log(allLoginData[id].password, password)\r\n            if (allLoginData[id].password === password){\r\n                sessionStorage.setItem(\"username\", username);\r\n                history.push(\"/\");\r\n                window.location.reload(); \r\n            }\r\n            else{\r\n                render(<ShowModal message=\"Wrong Password\" title=\"Login\"/>)\r\n                // alert(\"wrong password\")\r\n            }\r\n        }\r\n        else{\r\n            render(<ShowModal message=\"Wrong Username\" title=\"Login\" />)\r\n            // alert(\"wrong username\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        DB.child('adminlogin').on('value', snapshot => {\r\n            if(snapshot.val() != null){\r\n                setAllLoginData({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Styles>\r\n            <Container>\r\n                <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <h1><b>LOGIN</b></h1>\r\n                <Form.Group size=\"lg\" controlId=\"username\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                    <Button block size=\"lg\" type=\"submit\" variant=\"outline-secondary\" disabled={!validateForm()}>\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n            </Container>\r\n        </Styles>\r\n    );\r\n}","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\MyCarousel.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Subscribe.js",["86"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Container, Form} from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\nimport firebase from './../util/firebase';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\nimport bground from './Pics/pat3.jpg'\r\n\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n    form{\r\n        width: 50%;\r\n    }\r\n    @media screen and (max-width:990px){\r\n        .container{\r\n            padding: 2%;\r\n            margin-bottom: 20%;\r\n        }\r\n        form{\r\n            width:100%;\r\n        }\r\n    }\r\n\r\n    h2{\r\n        text-align:center;\r\n        color:whitesmoke;\r\n    }\r\n    .btn{\r\n        color:whitesmoke;\r\n        border-color:whitesmoke;\r\n    }\r\n    .container{\r\n        padding:2%;\r\n        background-image: url(${bground});\r\n        text-align:center;\r\n        font-family:cursive;\r\n        color:#302F2A;\r\n        margin-top: 2%;\r\n        margin-bottom: 10%;\r\n    }\r\n    @media screen and (max-width: 990px){\r\n        .container{\r\n            text-align:center;\r\n            margin-top: 5%;\r\n            margin-bottom: 20%;\r\n        }\r\n    }\r\n    @media screen and (man-width: 580px){\r\n        .container{\r\n        text-align:center;\r\n        margin-top: 20%;\r\n        margin-bottom: 20%;\r\n        }\r\n    }\r\n`\r\n\r\nconst Subscribe = () => {\r\n\r\n    const DB = firebase.database().ref();\r\n    const [eData, setEData] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n        setEData(e.target.value)\r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        DB.child('email').push(\r\n            eData,\r\n            err => {\r\n                if (err) {\r\n                    console.log(err);\r\n                    render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Subscribe\" />)\r\n                }\r\n                else {\r\n                    render(<ShowModal message=\"Thank you!! You have been successfully subscribed.\" title=\"Subscribe\" />)\r\n                    setEData(\"\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Styles >\r\n            <Container >\r\n                <h2 >Subscribe</h2>\r\n                <Form className=\"mx-auto\" onSubmit={handleOnSubmit}>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                        <Form.Control \r\n                            id=\"email\"\r\n                            value={eData}\r\n                            className=\"mb-2 mr-sm-2\" \r\n                            autoComplete=\"off\" \r\n                            onChange={handleChange}\r\n                            name=\"email\" type=\"email\"\r\n                            placeholder=\"Your Email here\" \r\n                            required \r\n                        />\r\n                    </Form.Group>\r\n                    <Button className=\"mb-2 \" variant=\"outline-secondary\" type=\"submit\">\r\n                        Subscribe\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default Subscribe;","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Contact.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Content.js",["87"],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\AddData.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\EditData.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\ShowMessage.js",["88"],"import React, { useEffect, useState } from 'react';\r\nimport firebase from '../util/firebase';\r\nimport styled from 'styled-components';\r\nimport cpat from './Pics/cardPat1.jpg'\r\nimport emailjs, {init} from 'emailjs-com';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nconst Styles = styled.div`\r\n    .container{\r\n        background-image: url(${cpat});\r\n        margin-top:5%;\r\n        margin-bottom:5%;\r\n        /* text-align:center; */\r\n    }\r\n    td{\r\n        font-family:cursive;\r\n    }\r\n    .replyForm{\r\n        margin-left:10%;\r\n        padding-left:5%;\r\n    }\r\n    pre {\r\n        font-family:cursive;\r\n        white-space: pre-wrap;\r\n        word-break: break-word;\r\n    }\r\n    \r\n    @media screen and (max-width:990px){\r\n        .container{\r\n        margin-top:10%;\r\n        margin-bottom:10%;\r\n        /* text-align:center; */\r\n    }\r\n    .replyForm{\r\n        margin-bottom: 20%;\r\n        padding-left:5%;\r\n    }\r\n    h2{\r\n        margin-top:4%;\r\n    }\r\n    .replyForm{\r\n        margin-left:auto;\r\n        padding-left:auto;\r\n    }\r\n    }\r\n`\r\nconst ShowMessage = () => {\r\n    const history = useHistory();\r\n        if (!sessionStorage.getItem(\"username\")) {\r\n            history.push(\"/\");\r\n    }\r\n    init(\"user_snMRHQ7aN070iSWaTOs8R\");\r\n\r\n    const SERVICE_ID = 'service_9xar3y4';\r\n    const TEMPLATE_ID = 'template_62sdjzq';\r\n    const DB = firebase.database().ref();\r\n    const [realData, setRealData] = useState({});\r\n\r\n    const [rData, setRData] = useState({\r\n        name :\"\",\r\n        email :\"\",\r\n        message :\"\"\r\n    })\r\n    useEffect(() => {\r\n        DB.child('message').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                setRealData({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const replyThis = (id) => {\r\n        console.log(id);\r\n        const toReply = Object.keys(realData).filter((i) => i === id).map((item) =>{\r\n            return realData[item];\r\n        })\r\n        setRData({\r\n            ...rData,\r\n            name: toReply[0].name,\r\n            email: toReply[0].email\r\n        })\r\n        \r\n        console.log(toReply[0].name);\r\n    }\r\n\r\n    const handleMessage = (e) =>{\r\n        setRData({\r\n            ...rData,\r\n            message: e.target.value\r\n        })\r\n    }\r\n    \r\n    const sendReply = (e) =>{\r\n        e.preventDefault();\r\n        console.log(rData.name,rData.email,rData.message);\r\n\r\n        var templateParams = {\r\n            reply_to : rData.email,\r\n            to_name : rData.name,\r\n            message : rData.message\r\n        };\r\n\r\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams)\r\n            .then(function (response) {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n                if(response.status === 200){\r\n                    render(<ShowModal message=\"Your reply was sent successfully.\" title=\"Reply\" />)\r\n                }\r\n                else{\r\n                    render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Reply\" />)\r\n                }\r\n            }, function (error) {\r\n                render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Reply\" />)\r\n                console.log('FAILED...', error);\r\n            });\r\n        \r\n        setRData({\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\"\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Styles>\r\n            <div className=\"container row\">\r\n                <div className=\" container col-md-8 col-lg-6 col-sm-12\">\r\n                    <h2 style={{ textAlign: 'center' }}>Messages</h2>\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Message</th>\r\n                                <th scope=\"col\">Reply</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Object.keys(realData).reverse().map((id) => {\r\n                                return (\r\n                                    <tr key={id} >\r\n                                        <td>{realData[id].name}</td>\r\n                                        <td><pre> {realData[id].message}</pre></td>\r\n                                        <td><Link to=\"#replyForm\" onClick={() => replyThis(id)} className=\"btn btn-sm btn-outline-secondary\">Reply</Link></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n                <div id=\"replyForm\" onSubmit={sendReply} className=\" container col-md-8 col-lg-6 col-sm-12\">\r\n                <form className=\"replyForm\" autoComplete=\"off\">\r\n                    <h2>Reply</h2>\r\n                    <div className=\"form-group \">\r\n                        <label htmlFor=\"exampleFormControlInput1\">Name</label>\r\n                        <input type=\"text\" value={rData.name} className=\"form-control\" name=\"name\" readOnly />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlInput1\" >Email</label>\r\n                            <input type=\"text\" value={rData.email} className=\"form-control\" name=\"email\" readOnly/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\">Message</label>\r\n                        <pre>\r\n                            <textarea className=\"form-control\" value={rData.message} name=\"message\" onChange={handleMessage}  rows=\"6\" />\r\n                        </pre>\r\n                    </div>\r\n                    <input value=\"Reply\" type=\"submit\" className=\"btn btn-outline-secondary\" />\r\n                </form>\r\n                </div>\r\n            </div>\r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default ShowMessage;","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\AllContent.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\myapprrr\\src\\components\\Message.js",["89"],"import React, {useState} from \"react\";\r\nimport { Container, Form, Button, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport bground from './Pics/moroccan-flower.png'\r\nimport firebase from '../util/firebase';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\n\r\nconst Styles = styled.div`\r\n    form{\r\n        width: 50%;\r\n    }\r\n    @media screen and (max-width:990px){\r\n        h2{\r\n            text-align:center;\r\n        }\r\n        .container{\r\n            padding: 2%;\r\n            margin-bottom:20%;\r\n        }\r\n        form{\r\n            width:100%;\r\n        }\r\n    }\r\n    .container{\r\n        font-family:cursive;\r\n        color:#302F2A;\r\n        background-image: url(${bground});\r\n        margin-bottom:15%;\r\n        background-color:#DFECE5;\r\n        padding:3%;\r\n    }\r\n    h2{\r\n        \r\n    }\r\n`\r\n\r\nconst Message = () => {\r\n\r\n    const DB = firebase.database().ref();\r\n\r\n    const [fData, setFData] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        message:\"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFData({\r\n            ...fData,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(fData);\r\n        DB.child('message').push(\r\n            fData,\r\n            err => {\r\n                if (err) {\r\n                    console.log(err);\r\n                    render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Send a Message\" />)\r\n                }\r\n                else {\r\n                    render(<ShowModal message=\"Your message is successfully sent.\" title=\"Send a Message\" />)\r\n                    setFData({\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        message: \"\"\r\n                    })\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Container>\r\n                <h2>Send a message</h2>\r\n                <Form onSubmit={handleOnSubmit}>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control autoComplete=\"off\" onChange={handleChange} name =\"name\" value={fData.name} type=\"text\" placeholder=\"Your Name\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control autoComplete=\"off\" onChange={handleChange} name=\"email\" value={fData.email} type=\"email\" placeholder=\"name@example.com\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Message</Form.Label>\r\n                        <Form.Control placeholder=\"Your message here.... \" onChange={handleChange} name=\"message\" value={fData.message} as=\"textarea\" rows={3} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"outline-secondary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default Message;",{"ruleId":"90","severity":1,"message":"91","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":2,"column":21,"nodeType":"92","messageId":"93","endLine":2,"endColumn":27},{"ruleId":"90","severity":1,"message":"99","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":97,"column":8,"nodeType":"102","endLine":97,"endColumn":10,"suggestions":"103"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"104","line":3,"column":29,"nodeType":"92","messageId":"93","endLine":3,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":74,"column":8,"nodeType":"102","endLine":74,"endColumn":10,"suggestions":"105"},{"ruleId":"90","severity":1,"message":"106","line":2,"column":35,"nodeType":"92","messageId":"93","endLine":2,"endColumn":38},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'Button' is defined but never used.","'hindiImg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DB'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'Form' is defined but never used.",["110"],"'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},"Update the dependencies array to be: [DB]",{"range":"114","text":"115"},{"range":"116","text":"115"},[2735,2737],"[DB]",[1883,1885]]