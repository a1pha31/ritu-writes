[{"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\index.js":"1","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\App.js":"2","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\Home.js":"3","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Contact.js":"4","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\NoMatch.js":"5","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\NavComponent.js":"6","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Content.js":"7","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\AdminLogin.js":"8","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\AddData.js":"9","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\EditData.js":"10","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\ShowMessage.js":"11","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\util\\firebase.js":"12","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\AllContent.js":"13","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Message.js":"14","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\MyCarousel.js":"15","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Subscribe.js":"16","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\ShowModal.js":"17"},{"size":260,"mtime":1609061461939,"results":"18","hashOfConfig":"19"},{"size":2425,"mtime":1617565361016,"results":"20","hashOfConfig":"19"},{"size":691,"mtime":1617284103440,"results":"21","hashOfConfig":"19"},{"size":1501,"mtime":1617127720595,"results":"22","hashOfConfig":"19"},{"size":603,"mtime":1614065582837,"results":"23","hashOfConfig":"19"},{"size":3101,"mtime":1617448729076,"results":"24","hashOfConfig":"19"},{"size":1668,"mtime":1617135692242,"results":"25","hashOfConfig":"19"},{"size":4393,"mtime":1617386754353,"results":"26","hashOfConfig":"19"},{"size":7488,"mtime":1617565842132,"results":"27","hashOfConfig":"19"},{"size":4603,"mtime":1617135779360,"results":"28","hashOfConfig":"19"},{"size":6192,"mtime":1617128032873,"results":"29","hashOfConfig":"19"},{"size":494,"mtime":1609690994106,"results":"30","hashOfConfig":"19"},{"size":6814,"mtime":1617135710872,"results":"31","hashOfConfig":"19"},{"size":3314,"mtime":1617281947029,"results":"32","hashOfConfig":"19"},{"size":2589,"mtime":1617566133845,"results":"33","hashOfConfig":"19"},{"size":5755,"mtime":1617564977854,"results":"34","hashOfConfig":"19"},{"size":1043,"mtime":1610921960908,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"m16ojo",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\index.js",[],["77","78"],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\App.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\Home.js",["79"],"import React, {useContext, useEffect} from \"react\";\r\nimport AllContent from './components/AllContent';\r\nimport Message from './components/Message';\r\nimport MyCarousel from \"./components/MyCarousel\";\r\nimport {RealData} from './App';\r\nimport Subscribe from './components/Subscribe';\r\n\r\nconst Home = () => {\r\n    \r\n    const realData = useContext(RealData);\r\n    const allCategories = [\"All\", ...new Set(Object.keys(realData).map((id) => realData[id].category))];\r\n\r\n    return (\r\n        <>\r\n            <MyCarousel allCategories={allCategories}/>\r\n            <AllContent realData={realData}/>\r\n            <Message/>\r\n            <Subscribe/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Contact.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\NoMatch.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\NavComponent.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Content.js",["80"],"import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Container, Button, Form } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport cpat from './Pics/cardPat1.jpg'\r\nimport { RealData } from '../App';\r\n\r\n\r\nconst Styles = styled.div`\r\n    .container{\r\n        background-image: url(${cpat});\r\n        padding: 5%;\r\n        margin-top:10%;\r\n        margin-bottom:10%;\r\n        \r\n        /* text-align:center; */\r\n    }\r\n    h1{\r\n        margin: 1%;\r\n        margin-left:0;\r\n    }\r\n    \r\n    \r\n\r\n    @media screen and (max-width:990px){\r\n        .container{\r\n        margin-top:20%;\r\n        margin-bottom:15%;\r\n        /* text-align:center; */\r\n    }\r\n    h1{\r\n        margin-top:4%;\r\n    }\r\n    }\r\n`\r\n\r\nconst Content = () => {\r\n\r\n    const { id } = useParams();\r\n    const realData = React.useContext(RealData);\r\n\r\n    return (\r\n        <Styles>\r\n                {Object.keys(realData).filter((i) => i === id).map((id) => {\r\n                    const item = realData[id];\r\n                    return (\r\n                        <Container key={id}>\r\n                            <h1>{item.title}</h1>\r\n                            <br />\r\n                            <h4>{item.category}</h4>\r\n                            <pre>\r\n                                {item.content}\r\n                            </pre>\r\n                            <Link to=\"/\">\r\n                                <Button variant=\"outline-secondary\">Back</Button>\r\n                            </Link>\r\n                        </Container>\r\n                    )\r\n                })}\r\n        </Styles>\r\n    );\r\n}\r\n\r\n\r\nexport default Content;\r\n","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\AdminLogin.js",["81","82"],"import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\nimport firebase from './../util/firebase';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\nimport bground from './Pics/cardPat1.jpg'\r\nimport {useHistory} from 'react-router-dom';\r\nimport Loader from 'react-spinners/HashLoader'\r\nconst Styles = styled.div`\r\n    .container{\r\n        background-image: url(${bground});\r\n        margin-top: 5%;\r\n        margin-bottom: 10%;\r\n        /* text-align:center; */\r\n    }\r\n@media screen and (max-width: 990px){\r\n        .container{\r\n        margin-top: 15%;\r\n        margin-bottom: 15%;\r\n        /* text-align:center; */\r\n    }\r\n}\r\n@media screen and (max-width: 580px){\r\n        .container{\r\n        margin-top: 20%;\r\n        margin-bottom: 20%;\r\n        /* text-align:center; */\r\n    }\r\n}\r\n\r\n    @media all and (min-width: 480px) {\r\n        .container {\r\n            padding: 60px 0;\r\n        }\r\n\r\n        .container form {\r\n            margin: 0 auto;\r\n            max-width: 320px;\r\n        }\r\n    }    \r\n    h1{\r\n        text-align:center;\r\n        margin: 3%;\r\n    }\r\n`\r\n\r\nexport default function AdminLogin() {\r\n\r\n    const history = useHistory();\r\n    if(sessionStorage.getItem('username')){\r\n        history.push('/');\r\n        // window.location.assign('/');\r\n    }\r\n\r\n    const DB = firebase.database().ref();\r\n    \r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [allLoginData, setAllLoginData] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function validateForm() {\r\n        return username.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const id = Object.keys(allLoginData).find((id) => allLoginData[id].username === username);\r\n        if(id){\r\n            console.log(allLoginData[id].password, password)\r\n            if (allLoginData[id].password === password){\r\n                sessionStorage.setItem(\"username\", username);\r\n                history.push(\"/\");\r\n                window.location.reload(); \r\n            }\r\n            else{\r\n                render(<ShowModal message=\"Wrong Password\" title=\"Login\"/>)\r\n                // alert(\"wrong password\")\r\n            }\r\n        }\r\n        else{\r\n            render(<ShowModal message=\"Wrong Username\" title=\"Login\" />)\r\n            // alert(\"wrong username\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        DB.child('adminlogin').on('value', snapshot => {\r\n            if(snapshot.val() != null){\r\n                setAllLoginData({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Styles>\r\n            {\r\n                loading ?\r\n                    <Loader style={{\r\n                        position: \"absolute\",\r\n                        top:\"50 \",\r\n                        left:\"50\"}}\r\n                        color={\"#110F0F\"} loading={loading} size={100} />\r\n                :\r\n            <Container>\r\n                <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <h1><b>LOGIN</b></h1>\r\n                <Form.Group size=\"lg\" controlId=\"username\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                    <Button block size=\"lg\" type=\"submit\" variant=\"outline-secondary\" disabled={!validateForm()}>\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n            </Container>\r\n            }\r\n        </Styles>\r\n    );\r\n}","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\AddData.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\EditData.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\ShowMessage.js",["83"],"import React, { useEffect, useState } from 'react';\r\nimport firebase from '../util/firebase';\r\nimport styled from 'styled-components';\r\nimport cpat from './Pics/cardPat1.jpg'\r\nimport emailjs, {init} from 'emailjs-com';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nconst Styles = styled.div`\r\n    .container{\r\n        background-image: url(${cpat});\r\n        margin-top:5%;\r\n        margin-bottom:5%;\r\n        /* text-align:center; */\r\n    }\r\n    td{\r\n        font-family:cursive;\r\n    }\r\n    .replyForm{\r\n        margin-left:10%;\r\n        padding-left:5%;\r\n    }\r\n    pre {\r\n        font-family:cursive;\r\n        white-space: pre-wrap;\r\n        word-break: break-word;\r\n    }\r\n    \r\n    @media screen and (max-width:990px){\r\n        .container{\r\n        margin-top:10%;\r\n        margin-bottom:10%;\r\n        /* text-align:center; */\r\n    }\r\n    .replyForm{\r\n        margin-bottom: 20%;\r\n        padding-left:5%;\r\n    }\r\n    h2{\r\n        margin-top:4%;\r\n    }\r\n    .replyForm{\r\n        margin-left:auto;\r\n        padding-left:auto;\r\n    }\r\n    }\r\n`\r\nconst ShowMessage = () => {\r\n    const history = useHistory();\r\n        if (!sessionStorage.getItem(\"username\")) {\r\n            history.push(\"/\");\r\n    }\r\n    init(\"user_snMRHQ7aN070iSWaTOs8R\");\r\n\r\n    const SERVICE_ID = 'service_9xar3y4';\r\n    const TEMPLATE_ID = 'template_62sdjzq';\r\n    const DB = firebase.database().ref();\r\n    const [realData, setRealData] = useState({});\r\n\r\n    const [rData, setRData] = useState({\r\n        name :\"\",\r\n        email :\"\",\r\n        message :\"\"\r\n    })\r\n    useEffect(() => {\r\n        DB.child('message').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                setRealData({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const replyThis = (id) => {\r\n        console.log(id);\r\n        const toReply = Object.keys(realData).filter((i) => i === id).map((item) =>{\r\n            return realData[item];\r\n        })\r\n        setRData({\r\n            ...rData,\r\n            name: toReply[0].name,\r\n            email: toReply[0].email\r\n        })\r\n        \r\n        console.log(toReply[0].name);\r\n    }\r\n\r\n    const handleMessage = (e) =>{\r\n        setRData({\r\n            ...rData,\r\n            message: e.target.value\r\n        })\r\n    }\r\n    \r\n    const sendReply = (e) =>{\r\n        e.preventDefault();\r\n        console.log(rData.name,rData.email,rData.message);\r\n\r\n        var templateParams = {\r\n            reply_to : rData.email,\r\n            to_name : rData.name,\r\n            message : rData.message\r\n        };\r\n\r\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams)\r\n            .then(function (response) {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n                if(response.status === 200){\r\n                    render(<ShowModal message=\"Your reply was sent successfully.\" title=\"Reply\" />)\r\n                }\r\n                else{\r\n                    render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Reply\" />)\r\n                }\r\n            }, function (error) {\r\n                render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Reply\" />)\r\n                console.log('FAILED...', error);\r\n            });\r\n        \r\n        setRData({\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\"\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Styles>\r\n            <div className=\"container row\">\r\n                <div className=\" container col-md-8 col-lg-6 col-sm-12\">\r\n                    <h2 style={{ textAlign: 'center' }}>Messages</h2>\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Message</th>\r\n                                <th scope=\"col\">Reply</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Object.keys(realData).reverse().map((id) => {\r\n                                return (\r\n                                    <tr key={id} >\r\n                                        <td>{realData[id].name}</td>\r\n                                        <td><pre> {realData[id].message}</pre></td>\r\n                                        <td><Link to=\"#replyForm\" onClick={() => replyThis(id)} className=\"btn btn-sm btn-outline-secondary\">Reply</Link></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n                <div id=\"replyForm\" onSubmit={sendReply} className=\" container col-md-8 col-lg-6 col-sm-12\">\r\n                <form className=\"replyForm\" autoComplete=\"off\">\r\n                    <h2>Reply</h2>\r\n                    <div className=\"form-group \">\r\n                        <label htmlFor=\"exampleFormControlInput1\">Name</label>\r\n                        <input type=\"text\" value={rData.name} className=\"form-control\" name=\"name\" readOnly />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlInput1\" >Email</label>\r\n                            <input type=\"text\" value={rData.email} className=\"form-control\" name=\"email\" readOnly/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\">Message</label>\r\n                        <pre>\r\n                            <textarea className=\"form-control\" value={rData.message} name=\"message\" onChange={handleMessage}  rows=\"6\" />\r\n                        </pre>\r\n                    </div>\r\n                    <input value=\"Reply\" type=\"submit\" className=\"btn btn-outline-secondary\" />\r\n                </form>\r\n                </div>\r\n            </div>\r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default ShowMessage;","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\util\\firebase.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\AllContent.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Message.js",["84"],"import React, {useState} from \"react\";\r\nimport { Container, Form, Button, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport bground from './Pics/moroccan-flower.png'\r\nimport firebase from '../util/firebase';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\n\r\nconst Styles = styled.div`\r\n    form{\r\n        width: 50%;\r\n    }\r\n    @media screen and (max-width:990px){\r\n        h2{\r\n            text-align:center;\r\n        }\r\n        .container{\r\n            padding: 2%;\r\n            margin-bottom:5%;\r\n        }\r\n        form{\r\n            width:100%;\r\n        }\r\n    }\r\n    .container{\r\n        font-family:cursive;\r\n        color:#302F2A;\r\n        background-image: url(${bground});\r\n        margin-bottom:5%;\r\n        background-color:#DFECE5;\r\n        padding:3%;\r\n    }\r\n    h2{\r\n        \r\n    }\r\n`\r\n\r\nconst Message = () => {\r\n\r\n    const DB = firebase.database().ref();\r\n\r\n    const [fData, setFData] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        message:\"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFData({\r\n            ...fData,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(fData);\r\n        DB.child('message').push(\r\n            fData,\r\n            err => {\r\n                if (err) {\r\n                    console.log(err);\r\n                    render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Send a Message\" />)\r\n                }\r\n                else {\r\n                    render(<ShowModal message=\"Your message is successfully sent.\" title=\"Send a Message\" />)\r\n                    setFData({\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        message: \"\"\r\n                    })\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Container>\r\n                <h2>Send a message</h2>\r\n                <Form onSubmit={handleOnSubmit}>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control autoComplete=\"off\" onChange={handleChange} name =\"name\" value={fData.name} type=\"text\" placeholder=\"Your Name\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control autoComplete=\"off\" onChange={handleChange} name=\"email\" value={fData.email} type=\"email\" placeholder=\"name@example.com\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Message</Form.Label>\r\n                        <Form.Control placeholder=\"Your message here.... \" onChange={handleChange} name=\"message\" value={fData.message} as=\"textarea\" rows={3} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"outline-secondary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default Message;","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\MyCarousel.js",[],"C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\Subscribe.js",["85","86"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Container, Form} from \"react-bootstrap\";\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport firebase from '../util/firebase';\r\nimport ShowModal from './ShowModal';\r\nimport { render } from '@testing-library/react';\r\nimport bground from './Pics/pat3.jpg'\r\n\r\nconst Styles = styled.div`\r\n\r\n    form{\r\n        width: 50%;\r\n    }\r\n    @media screen and (max-width:990px){\r\n        .container{\r\n            padding: 2%;\r\n            margin-bottom: 20%;\r\n        }\r\n        form{\r\n            width:100%;\r\n        }\r\n    }\r\n\r\n    h1{\r\n        text-align:center;\r\n        color:whitesmoke;\r\n        margin-bottom:2%;\r\n    }\r\n    .btn{\r\n        color:whitesmoke;\r\n        border-color:whitesmoke;\r\n    }\r\n    .container{\r\n        padding:2%;\r\n        background-image: url(${bground});\r\n        text-align:center;\r\n        font-family:cursive;\r\n        color:#302F2A;\r\n        /* margin-top: 2%; */\r\n        margin-bottom: 10%;\r\n    }\r\n    @media screen and (max-width: 990px){\r\n        .container{\r\n            text-align:center;\r\n            margin-top: 5%;\r\n            margin-bottom: 20%;\r\n        }\r\n    }\r\n    @media screen and (max-width: 580px){\r\n        .container{\r\n        text-align:center;\r\n        margin-top: 10%;\r\n        margin-bottom: 20%;\r\n        }\r\n    }\r\n`\r\n\r\nconst Subscribe = () => {\r\n\r\n    const DB = firebase.database().ref();\r\n    const [eData, setEData] = useState({\r\n        name : \"\",\r\n        email: \"\"\r\n    });\r\n    const [emailList, setEmailList] = useState({});\r\n    const [cList, setCList] = useState(false);\r\n    const [subs, setSubs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        DB.child('email').on('value', snapshot =>{\r\n            if(snapshot.val() != null){\r\n                setEmailList({\r\n                    ...snapshot.val(),\r\n                })\r\n            }\r\n        })\r\n    },[cList]);\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        setEData({\r\n            ...eData,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n        setCList(!cList);\r\n        e.preventDefault();\r\n        const length = Object.keys(emailList).length;\r\n        console.log(length);\r\n        if ((Object.values(emailList).filter(id => id.email !== eData.email).length === 0) && Object.keys(emailList).length !== 0) {\r\n            render(<ShowModal message=\"You are already subscribed!!\" title=\"Subscribe\" />)\r\n        }\r\n        else{\r\n \r\n            DB.child('email').push(\r\n                eData,\r\n                err => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                        render(<ShowModal message=\"There was an error.\\nPlease try again!!\" title=\"Subscribe\" />)\r\n                    }\r\n                    else {\r\n                        render(<ShowModal message=\"Thank you!! You have been successfully subscribed.\" title=\"Subscribe\" />)\r\n                        setEData({\r\n                            name : \"\",\r\n                            email: \"\"\r\n                        });\r\n                    }\r\n                }\r\n                )\r\n            }\r\n        }\r\n\r\n    return (\r\n        <Styles >\r\n            <Container >\r\n                <h1 >Subscribe</h1>\r\n                <Form className=\"mx-auto\" onSubmit={handleOnSubmit}>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                        <Form.Control \r\n                            value={eData.name}\r\n                            className=\"mb-4 mr-sm-2\" \r\n                            autoComplete=\"off\" \r\n                            onChange={handleChange}\r\n                            name=\"name\" type=\"text\"\r\n                            placeholder=\"Your Name here\" \r\n                            required \r\n                        />\r\n                        <Form.Control\r\n                            value={eData.email}\r\n                            className=\"mb-2 mr-sm-2\"\r\n                            autoComplete=\"off\"\r\n                            onChange={handleChange}\r\n                            name=\"email\" type=\"email\"\r\n                            placeholder=\"Your Email here\"\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <p style={{ color: \"whitesmoke\" ,margin:\"0\"}}>Submit your email address to receive updates.<br /> Unsubscribe from our emails at any time.</p>\r\n                    <Button className=\"mb-2 \" variant=\"outline-secondary\" type=\"submit\">\r\n                        Subscribe\r\n                    </Button>\r\n                    {sessionStorage.getItem(\"username\") && \r\n                    <Button className=\"mb-2 \" style={{marginLeft:\"5px\"}} variant=\"outline-secondary\" onClick={() => setSubs(!subs)}>\r\n                        {subs ? \"Hide\" : \"Show\" } Subscribers\r\n                    </Button>\r\n                    }\r\n                    {subs && <ShowSubscribers emailList={emailList} />}\r\n                </Form>\r\n            </Container>\r\n        </Styles>\r\n    );\r\n}\r\n\r\n\r\nconst ShowSubscribers = ({emailList}) => {\r\n\r\n    const totalSubs = Object.keys(emailList).length;\r\n    console.log(emailList);\r\n\r\n    return(\r\n        <div style={{textAlign:\"justify\"}}>\r\n        <h3 style={{color:\"white\"}}>{totalSubs} Subscribers</h3>\r\n        {Object.keys(emailList).map((id) =>{\r\n            const email = emailList[id];\r\n            return(\r\n                <p style={{ color: \"white\", marginLeft: \"3%\" }} key=\"id\">\r\n                    {email.name}\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    {email.email}\r\n                </p>\r\n            )\r\n        })}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Subscribe;","C:\\Users\\DELL\\OneDrive\\Xtra\\Programming\\projects\\React\\ritu-writes\\myapprrr\\src\\components\\ShowModal.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":37},{"ruleId":"91","severity":1,"message":"95","line":3,"column":29,"nodeType":"93","messageId":"94","endLine":3,"endColumn":33},{"ruleId":"91","severity":1,"message":"96","line":62,"column":21,"nodeType":"93","messageId":"94","endLine":62,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":98,"column":8,"nodeType":"99","endLine":98,"endColumn":10,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"98","line":74,"column":8,"nodeType":"99","endLine":74,"endColumn":10,"suggestions":"101"},{"ruleId":"91","severity":1,"message":"102","line":2,"column":35,"nodeType":"93","messageId":"94","endLine":2,"endColumn":38},{"ruleId":"91","severity":1,"message":"103","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":35},{"ruleId":"97","severity":1,"message":"98","line":77,"column":7,"nodeType":"99","endLine":77,"endColumn":14,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DB'. Either include it or remove the dependency array.","ArrayExpression",["107"],["108"],"'Col' is defined but never used.","'createGlobalStyle' is defined but never used.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"110","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [DB]",{"range":"115","text":"116"},{"range":"117","text":"116"},"Update the dependencies array to be: [DB, cList]",{"range":"118","text":"119"},[2833,2835],"[DB]",[1883,1885],[1915,1922],"[DB, cList]"]